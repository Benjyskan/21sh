# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    Makefile2                                          :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: penzo <marvin@42.fr>                       +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2019/03/18 18:12:58 by penzo             #+#    #+#              #
#    Updated: 2019/03/18 19:51:04 by penzo            ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

#SRC_NAME	:=	ft_tolower.c ft_toupper.c  ft_isprint.c ft_isascii.c \
#	   ft_isalnum.c ft_isdigit.c ft_isalpha.c ft_strlen.c ft_strdup.c \
#	   ft_strndup.c ft_strcpy.c  ft_strncpy.c ft_strcat.c ft_strncat.c \
#	   ft_strlcat.c ft_strnew.c ft_strdel.c ft_strclr.c ft_strequ.c \
#	   ft_putchar.c ft_putstr.c ft_putendl.c ft_putnbr.c ft_putchar_fd.c \
#	   ft_putstr_fd.c ft_putnbr_fd.c ft_putendl_fd.c ft_itoa.c ft_atoi.c \
#	   ft_swap.c ft_strsplit.c ft_strrev.c ft_strtrim.c ft_strjoin.c \
#	   ft_strsub.c ft_strnequ.c ft_memalloc.c ft_memdel.c ft_striter.c \
#	   ft_striteri.c ft_strmap.c ft_strmapi.c ft_strchr.c ft_strrchr.c \
#	   ft_strcmp.c ft_strncmp.c ft_strstr.c ft_strnstr.c ft_memset.c \
#	   ft_bzero.c ft_memcpy.c ft_memccpy.c ft_memmove.c ft_memchr.c \
#	   ft_memcmp.c ft_lstnew.c ft_lstlen.c ft_lstdelone.c ft_lstdel.c \
#	   ft_lstadd.c ft_lstappend.c ft_lstiter.c ft_lstmap.c ft_put_nultab.c \
#	   ft_is_c_in_str.c gnl/get_next_line.c get_ntab_len.c 
#	   ft_strcmp_until_c.c ft_free_nultab.c ft_dup_nultab.c

NAME	:=	libft.a

CC		:=	gcc
CFLAGS	:=	-Wextra -Wall -Werror

SRC_PATH	:=	srcs
SRC_FTIS_PATH:= $(addprefix $(SRC_PATH)/,ft_is)
SRC_LST_PATH:= $(addprefix $(SRC_PATH)/,lst)
SRC_MEM_PATH:= $(addprefix $(SRC_PATH)/,mem)
SRC_PUT_PATH:= $(addprefix $(SRC_PATH)/,put)
SRC_STR_PATH:= $(addprefix $(SRC_PATH)/,str)
SRC_TAB_PATH:= $(addprefix $(SRC_PATH)/,tab)
SRC_GNL_PATH:= $(addprefix $(SRC_PATH)/,gnl)


SRC_FTIS_NAME:=	ft_is_c_in_str.c ft_isalnum.c ft_isalpha.c ft_isascii.c \
	ft_isdigit.c ft_isprint.c
SRC_GNL_NAME:=	get_next_line.c 
SRC_LST_NAME:= ft_lstadd.c ft_lstappend.c ft_lstdel.c ft_lstdelone.c \
	ft_lstiter.c ft_lstlen.c ft_lstmap.c ft_lstnew.c
SRC_TAB_NAME:= ft_dup_nultab.c ft_free_nultab.c ft_put_nultab.c \
	get_ntab_len.c
SRC_STR_NAME:= ft_strcat.c ft_strcmp_until_c.c ft_strequ.c ft_strlcat.c \
	ft_strncat.c ft_strnequ.c ft_strrev.c ft_strtrim.c ft_strchr.c \
	ft_strcpy.c ft_striter.c ft_strlen.c ft_strncmp.c ft_strnew.c \
	ft_strsplit.c ft_strclr.c ft_strdel.c ft_striteri.c ft_strmap.c \
	ft_strncpy.c ft_strnstr.c ft_strstr.c ft_strcmp.c ft_strdup.c \
	ft_strjoin.c ft_strmapi.c ft_strndup.c ft_strrchr.c ft_strsub.c
SRC_PUT_NAME:= ft_putchar.c ft_putchar_fd.c ft_putendl.c ft_putendl_fd.c \
	ft_putnbr.c ft_putnbr_fd.c ft_putstr.c ft_putstr_fd.c
SRC_MEM_NAME:= ft_memalloc.c ft_memccpy.c ft_memchr.c ft_memcmp.c \
	ft_memcpy.c ft_memdel.c ft_memmove.c ft_memset.c
SRC_NAME	:= ft_atoi.c ft_bzero.c ft_itoa.c ft_swap.c ft_tolower.c \
	ft_toupper.c


INC_NAME	:=	libft.h
OBJ_NAME	:=	$(SRC:.c=.o)

#SRC			:=	$(addprefix $(SRC_PATH)/,$(SRC_NAME))
SRC			:= $(addprefix $(SRC_PATH)/,$(SRC_NAME)) \
	$(addprefix $(SRC_FTIS_PATH)/,$(SRC_FTIS_NAME)) \
	$(addprefix $(SRC_LST_PATH)/,$(SRC_LST_NAME)) \
	$(addprefix $(SRC_MEM_PATH)/,$(SRC_MEM_NAME)) \
	$(addprefix $(SRC_PUT_PATH)/,$(SRC_PUT_NAME)) \
	$(addprefix $(SRC_STR_PATH)/,$(SRC_STR_NAME)) \
	$(addprefix $(SRC_TAB_PATH)/,$(SRC_TAB_NAME)) \
	$(addprefix $(SRC_GNL_PATH)/,$(SRC_GNL_NAME))

OBJ_PATH	:=	objs
INC_PATH	:=	includes
OBJ			:=	$(addprefix $(OBJ_PATH)/,$(OBJ_NAME))

INCL		:=	-I .

all: $(NAME)

$(NAME): $(OBJ_NAME)
	ar rc $(NAME) $(OBJ)
	ranlib $(NAME)

#$(OBJ_PATH)/%.o: $(SRC_PATH)/%.c Makefile $(INC_NAME)
$(OBJ_PATH)/%.o: %.c Makefile $(INC_NAME)
	@mkdir $(OBJ_PATH) 2> /dev/null || true
	$(CC) $(CFLAGS) $(INCL) -o $@ -c $<

clean:
	rm -fv $(OBJ)
	@rmdir $(OBJ_PATH) 2> /dev/null || true

fclean: clean
	rm -fv $(NAME)

re: fclean all
